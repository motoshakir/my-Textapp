{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","react_default","a","createElement","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","props","concat","mode","href","title","aria-label","aria-current","onClick","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","msg","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","react_router_dom","body","components_Alert","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d2cd7940.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function About() {\n  return (\n    <div className=\"container\">\n        <div className=\"accordion\" id=\"accordionExample\">\n            <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingOne\">\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                    Accordion Item #1\n                </button>\n                </h2>\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                <div className=\"accordion-body\">\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                </div>\n                </div>\n            </div>\n            <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                    Accordion Item #2\n                </button>\n                </h2>\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                <div className=\"accordion-body\">\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                </div>\n                </div>\n            </div>\n            <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingThree\">\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                    Accordion Item #3\n                </button>\n                </h2>\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                <div className=\"accordion-body\">\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n        </li> */}\n      </ul>\n      {/* <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n      </form> */}\n\n<div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Enable dark mode</label>\n</div>\n    </div>\n  </div>\n</nav>\n  )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string\n}\n\nNavbar.defaultProps ={\n    title: 'set title here',\n    aboutText: 'About text here'\n};","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        //console.log(\"Uppercase was clicked\" + text);\n        let newtext = text.toUpperCase();\n        setText(newtext);\n        props.showAlert(\"convert to uppercase!\",\"success\");\n    }\n\n    const handleLowClick = ()=>{\n        //console.log(\"Uppercase was clicked\" + text);\n        let newtext = text.toLowerCase();\n        setText(newtext);\n        props.showAlert(\"convert to lowercase!\",\"success\");\n    }\n\n    const handleClearClick = ()=>{\n       \n        let newtext = \"\";\n\n        setText(newtext);\n        props.showAlert(\"Clear!\",\"success\");\n    }\n    const handleCopy = ()=>{\n        let text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied!\",\"success\");\n     \n    }\n\n    const handleExtraSpace = ()=>{\n        let newtext = text.split(/[ ]+/);\n        setText(newtext.join(\" \"));\n        props.showAlert(\"Removed extra space!\",\"success\")\n    }\n\n\n     \n    const handleOnChange = (event)=>{\n       // console.log(\"On Change\");\n        setText(event.target.value);\n        \n    }\n   \n    const [text, setText]= useState('');\n  \n  return (\n    <>\n<div className='container' style={{color: props.mode === 'dark'?'white':'#101e55'}}>\n    <h1 >{props.heading}</h1>\n    <div className=\"mb-3\">\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white',color: props.mode === 'dark'?'white':'#101e55'}} id=\"myBox\"  rows=\"8\" ></textarea>\n    </div>\n    <button className=\"btn btn-primary mx-1\" onClick={handleUpClick} >Convert to Uppercase</button>\n    <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to Uppercase</button>\n    <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\n    <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy</button>\n    <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>Remove Space</button>\n</div>\n\n<div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'#101e55'}}>\n    <h1>Your Text summary</h1>\n    <p>{text.length>0?text.split(\" \").length:\"0\"} words and  {text.length} char</p>\n    <p>{0.008 * text.split(\" \").length} minutes to take read</p>\n    <h2>Preview</h2>\n    <p>{text.length>0?text:\"Enter sometext to preview it here\"}</p> \n</div>\n</>\n\n  )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    // const capt = (word)=>{\n    //   const lower = word.toLowerCase();\n    //   return lower.charAt(0).toUppercase() + lower.slice(1);\n    // }\n\n  return (\n    props.alert && <div>\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\n\n        </div>\n    </div>\n  )\n}\n\nexport default Alert","\nimport './App.css';\n import About from './components/About';\nimport Navbar from './components/Navbar';\n import TextForm from './components/TextForm';\n import React, {useState} from 'react';\nimport Alert from './components/Alert';\n\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n \n\nfunction App() {\n  const [mode,setmode] =  useState('light');\n  const [alert,setAlert] =  useState(null);\n  \n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const togglemode=()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor=\"#101e55\";\n      showAlert(\"Dark mode has been enable\",\"success\");\n      document.title ='TextUtils - Dark Mode'\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode has been enable\",\"success\");\n      document.title ='TextUtils - Light Mode'\n    }\n  }\n  \n  return (\n   <>\n <BrowserRouter>\n      <Navbar title=\"TextUtils\" mode ={mode} togglemode={togglemode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      \n        <Routes>\n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading = \"Enter your text to analyse\" mode ={mode} />} />\n          <Route path=\"/about\" element={<About/>} />\n        </Routes>\n      </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}